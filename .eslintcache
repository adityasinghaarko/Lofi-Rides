[{"G:\\Programming\\Web Devoloping\\Projects\\Assignments\\Assignment 9\\urban-riders\\src\\index.js":"1","G:\\Programming\\Web Devoloping\\Projects\\Assignments\\Assignment 9\\urban-riders\\src\\reportWebVitals.js":"2","G:\\Programming\\Web Devoloping\\Projects\\Assignments\\Assignment 9\\urban-riders\\src\\App.js":"3","G:\\Programming\\Web Devoloping\\Projects\\Assignments\\Assignment 9\\urban-riders\\src\\components\\NavigationBar\\NavigationBar.js":"4","G:\\Programming\\Web Devoloping\\Projects\\Assignments\\Assignment 9\\urban-riders\\src\\components\\Home\\Home.js":"5","G:\\Programming\\Web Devoloping\\Projects\\Assignments\\Assignment 9\\urban-riders\\src\\components\\Login\\Login.js":"6","G:\\Programming\\Web Devoloping\\Projects\\Assignments\\Assignment 9\\urban-riders\\src\\components\\Login\\firebaseConfig.js":"7","G:\\Programming\\Web Devoloping\\Projects\\Assignments\\Assignment 9\\urban-riders\\src\\components\\Destination\\Destination.js":"8","G:\\Programming\\Web Devoloping\\Projects\\Assignments\\Assignment 9\\urban-riders\\src\\components\\PrivateRoute\\PrivatRoute.js":"9","G:\\Programming\\Web Devoloping\\Projects\\Assignments\\Assignment 9\\urban-riders\\src\\components\\Option\\Option.js":"10"},{"size":500,"mtime":499162500000,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":499162500000,"results":"13","hashOfConfig":"12"},{"size":1283,"mtime":1616336109815,"results":"14","hashOfConfig":"12"},{"size":1743,"mtime":1616336516556,"results":"15","hashOfConfig":"12"},{"size":1757,"mtime":1616256560958,"results":"16","hashOfConfig":"12"},{"size":6350,"mtime":1616324873594,"results":"17","hashOfConfig":"12"},{"size":339,"mtime":1616171517742,"results":"18","hashOfConfig":"12"},{"size":3304,"mtime":1616336051727,"results":"19","hashOfConfig":"12"},{"size":749,"mtime":1616236462446,"results":"20","hashOfConfig":"12"},{"size":1612,"mtime":1616330677363,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1hg2ad7",{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"G:\\Programming\\Web Devoloping\\Projects\\Assignments\\Assignment 9\\urban-riders\\src\\index.js",[],"G:\\Programming\\Web Devoloping\\Projects\\Assignments\\Assignment 9\\urban-riders\\src\\reportWebVitals.js",[],"G:\\Programming\\Web Devoloping\\Projects\\Assignments\\Assignment 9\\urban-riders\\src\\App.js",["46"],"import './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport React, { useState } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport NavigationBar from './components/NavigationBar/NavigationBar';\nimport Home from './components/Home/Home';\nimport Login from './components/Login/Login';\nimport { createContext } from 'react';\nimport PrivatRoute from './components/PrivateRoute/PrivatRoute';\nimport Destination from './components/Destination/Destination';\n\nexport const UserContext = createContext()\n\nfunction App() {\n  const [loggedInUser, setLoggedInUser] = useState({\n    name: '',\n    email: '',\n  })\n\n  return (\n    <div>\n      <UserContext.Provider value={[loggedInUser, setLoggedInUser]}>\n        <Router>\n          <NavigationBar />\n          <Switch>\n            <Route path=\"/home\">\n              <Home />\n            </Route>\n            <Route path=\"/login\">\n              <Login />\n            </Route>\n            <PrivatRoute path=\"/destination/:vehicle\">\n              <Destination />\n            </PrivatRoute>\n            <Route exact path=\"/\">\n              <Home />\n            </Route>\n          </Switch>\n        </Router>\n      </UserContext.Provider>\n    </div>\n\n  );\n}\n\nexport default App;\n","G:\\Programming\\Web Devoloping\\Projects\\Assignments\\Assignment 9\\urban-riders\\src\\components\\NavigationBar\\NavigationBar.js",[],"G:\\Programming\\Web Devoloping\\Projects\\Assignments\\Assignment 9\\urban-riders\\src\\components\\Home\\Home.js",[],"G:\\Programming\\Web Devoloping\\Projects\\Assignments\\Assignment 9\\urban-riders\\src\\components\\Login\\Login.js",["47","48","49","50","51","52","53","54","55","56"],"import React, { useContext, useState } from 'react';\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport firebaseConfig from './firebaseConfig';\r\nimport { Button, Container } from 'react-bootstrap';\r\nimport './Login.css';\r\nimport { UserContext } from '../../App';\r\nimport { useHistory, useLocation } from 'react-router';\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nconst Login = () => {\r\n    let history = useHistory();\r\n    let location = useLocation();\r\n    let { from } = location.state || { from: { pathname: \"/\" } };\r\n\r\n    const [loggedInUser, setLoggedInUser] = useContext(UserContext);\r\n    const [isNewUser, setIsNewUser] = useState(false);\r\n    let loginSuccess = '';\r\n\r\n    const [user, setUser] = useState({\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n        error: '',\r\n        success: false\r\n    })\r\n\r\n    const handleBlur = (event) => {\r\n        let isFieldValid = true;\r\n        // console.log(event.target.name ,event.target.value);\r\n        if (event.target.name === 'email') {\r\n            isFieldValid = /\\S+@\\S+\\.\\S+/.test(event.target.value);\r\n            // console.log(isEmailValid);\r\n        }\r\n        if (event.target.name === 'password') {\r\n            isFieldValid = event.target.value.length > 6 && /\\d{1}/.test(event.target.value);\r\n        }\r\n        if (isFieldValid) {\r\n            const newUserInfo = { ...user };\r\n            newUserInfo[event.target.name] = event.target.value;\r\n            setUser(newUserInfo);\r\n\r\n        }\r\n    }\r\n\r\n    const handleSignUp = (event) => {\r\n        if (user.email && user.password) {\r\n            firebase.auth().createUserWithEmailAndPassword(user.email, user.password)\r\n                .then((userCredential) => {\r\n                    // Signed in \r\n                    var user = userCredential.user;\r\n                    const newUserInfo = { ...user };\r\n                    newUserInfo.error = '';\r\n                    newUserInfo.success = true;\r\n                    setUser(newUserInfo);\r\n                    // ...\r\n                })\r\n                .catch((error) => {\r\n                    var errorCode = error.code;\r\n                    var errorMessage = error.message;\r\n                    const newUserInfo = { ...user };\r\n                    newUserInfo.error = errorMessage;\r\n                    newUserInfo.success = false;\r\n                    setUser(newUserInfo);\r\n                });\r\n        }\r\n        console.log('submit clicked');\r\n        event.preventDefault();\r\n    }\r\n\r\n    const handleSignIn = (event) => {\r\n        firebase.auth().signInWithEmailAndPassword(user.email, user.password)\r\n            .then((userCredential) => {\r\n                // Signed in\r\n                var { email, displayName, photoURL } = userCredential.user;\r\n                setLoggedInUser({\r\n                    name: displayName,\r\n                    email: email,\r\n                    photoURl: photoURL\r\n                })\r\n\r\n                const newUserInfo = { ...user };\r\n                newUserInfo.error = '';\r\n                setUser(newUserInfo);\r\n                loginSuccess = 'Logged in successfully'\r\n                history.replace(from);\r\n                // ...\r\n            })\r\n            .catch((error) => {\r\n                var errorCode = error.code;\r\n                var errorMessage = error.message;\r\n            });\r\n        event.preventDefault();\r\n    }\r\n\r\n    // Google sign in -------->\r\n    var provider = new firebase.auth.GoogleAuthProvider();\r\n    const [googleLogInSuccess, setGoogleLogInSuccess] = useState(false)\r\n\r\n    const handleGoogleSignIn = () => {\r\n        firebase.auth()\r\n            .signInWithPopup(provider)\r\n            .then((result) => {\r\n                var credential = result.credential;\r\n                var token = credential.accessToken;\r\n                const { displayName, email, photoURL } = result.user;\r\n                setLoggedInUser({\r\n                    name: displayName,\r\n                    email: email,\r\n                    photoURl: photoURL\r\n                })\r\n                setGoogleLogInSuccess(true);\r\n                history.replace(from);\r\n                // ...\r\n            }).catch((error) => {\r\n                var errorCode = error.code;\r\n                var errorMessage = error.message;\r\n                var email = error.email;\r\n                var credential = error.credential;\r\n                console.log(errorMessage);\r\n                // ...\r\n            });\r\n    }\r\n\r\n    // <-------Google sign in\r\n\r\n\r\n    return (\r\n        <div className=\"login-page\">\r\n            <Container className=\"auth-form\">\r\n                <form>\r\n                    {isNewUser ? <h1>Sign Up</h1> : <h1>Login</h1>}\r\n                    {isNewUser && <input className=\"form-input\" name=\"name\" onBlur={handleBlur} type=\"text\" placeholder=\"Your Name\" required />}\r\n                    <br />\r\n                    <input className=\"form-input\" name=\"email\" onBlur={handleBlur} type=\"text\" placeholder=\"Email\" required />\r\n                    <br />\r\n                    <input className=\"form-input\" name=\"password\" onBlur={handleBlur} type=\"password\" placeholder=\"Password\" id=\"\" required />\r\n                    <br />\r\n                    {isNewUser ? <input onClick={handleSignUp} type=\"Create account\" value=\"Submit\" /> : <input onClick={handleSignIn} type=\"submit\" value=\"Login\" />}\r\n                    <p style={{ color: 'red' }}>{user.error}</p>\r\n                    {user.success && <p style={{ color: 'green' }}>User created successfully.</p>}\r\n                </form>\r\n\r\n                {isNewUser ? <p>Allready have and account? <span onClick={() => setIsNewUser(false)} style={{ color: \"orange\", textDecoration: \"underline\" }}>Login</span></p>\r\n                    :\r\n                    <p>Dont have an account? <span onClick={() => setIsNewUser(true)} style={{ color: \"orange\", textDecoration: \"underline\" }}>Create account</span></p>\r\n                }\r\n            </Container>\r\n            <Container>\r\n                <p>________________________Or________________________</p>\r\n                <button onClick={handleGoogleSignIn}>Continue with Google</button>\r\n                {googleLogInSuccess && <p style={{ color: 'green' }}>Logined successfully</p>}\r\n            </Container>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;","G:\\Programming\\Web Devoloping\\Projects\\Assignments\\Assignment 9\\urban-riders\\src\\components\\Login\\firebaseConfig.js",[],"G:\\Programming\\Web Devoloping\\Projects\\Assignments\\Assignment 9\\urban-riders\\src\\components\\Destination\\Destination.js",["57","58"],"import React, { useEffect, useState } from 'react';\r\nimport GoogleMapReact from 'google-map-react';\r\nimport { Container } from 'react-bootstrap';\r\nimport { useParams } from 'react-router';\r\nimport data from '../../data/data.json';\r\nimport Option from '../Option/Option';\r\nimport \"./Destination.css\";\r\nimport mapPic from '../../images/Map.png';\r\n\r\nconst Destination = () => {\r\n    const { vehicle } = useParams();\r\n    const vehicleFromParam = vehicle;\r\n    const [vehicleFromInput, setVehicleFromInput] = useState('')\r\n    const [ridePlan, setRidePlan] = useState({\r\n        vehicle: '',\r\n        pickFrom: '',\r\n        pickTo: ''\r\n    })\r\n\r\n    const [result, setResult] = useState({})\r\n\r\n    const onBlurHandler = (event) => {\r\n        if (event.target.name === 'pickFrom') {\r\n            const newRidePlan = { ...ridePlan };\r\n            newRidePlan[event.target.name] = event.target.value;\r\n            setRidePlan(newRidePlan);\r\n        }\r\n\r\n        if (event.target.name === 'pickTo') {\r\n            const newRidePlan = { ...ridePlan };\r\n            newRidePlan[event.target.name] = event.target.value;\r\n            setRidePlan(newRidePlan);\r\n        }\r\n        if (event.target.name === 'vehicle') {\r\n            const newRidePlan = { ...ridePlan };\r\n            newRidePlan[event.target.name] = event.target.value;\r\n            setRidePlan(newRidePlan);\r\n            console.log(ridePlan.vehicle);\r\n        }\r\n    }\r\n\r\n    const searchButtonHandler = (event) => {\r\n        const newRidePlan = { ...ridePlan };\r\n        newRidePlan.vehicle = vehicleFromInput;\r\n        setRidePlan(newRidePlan);\r\n        const vehicleInfo = data.find(category => category.vehicle === `${ridePlan.vehicle}`)\r\n        setResult(vehicleInfo.info);\r\n\r\n        event.preventDefault();\r\n    }\r\n    return (\r\n        <div className=\"row\">\r\n            <div className=\"col-md-5\">\r\n                <Container>\r\n                    <form>\r\n                        <h4>Pick from</h4>\r\n                        <input name=\"pickFrom\" required onBlur={onBlurHandler} type=\"text\" />\r\n                        <br />\r\n                        <h4>Pick to</h4>\r\n                        <input name=\"pickTo\" required onBlur={onBlurHandler} type=\"text\" />\r\n                        <br />\r\n                        <h5>Choose your ride mean(Click Once)</h5>\r\n                        {\r\n                            vehicleFromParam === 'all' ? <input onBlur={event => setVehicleFromInput(event.target.value)} required id=\"vehicleInput\" type=\"text\" placeholder=\"bus/car/bike/train\" />\r\n                                :\r\n                                <input onBlur={event => setVehicleFromInput(event.target.value)} required className=\"vehicleInput\" type=\"text\" defaultValue={vehicleFromParam} />\r\n                        }\r\n                        <br />\r\n                        <input style={{ marginTop: '10px' }} onClick={searchButtonHandler} type=\"submit\" value=\"Search\" />\r\n                    </form>\r\n                    <Option result={result} ridePlan={ridePlan}></Option>\r\n                </Container>\r\n            </div>\r\n            <div className=\"col-md-7\">\r\n                <img style={{width: '500px', height:\"500px\"}} src={mapPic} alt=\"\"/>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Destination;","G:\\Programming\\Web Devoloping\\Projects\\Assignments\\Assignment 9\\urban-riders\\src\\components\\PrivateRoute\\PrivatRoute.js",["59"],"import React, { useContext } from 'react';\r\nimport { Redirect, Route } from 'react-router';\r\nimport { UserContext } from '../../App';\r\n\r\nconst PrivatRoute = ({ children, ...rest }) => {\r\n    const [loggedInUser, setLoggedInUser] = useContext(UserContext);\r\n\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={({ location }) =>\r\n                loggedInUser.email ? (\r\n                    children\r\n                ) : (\r\n                    <Redirect\r\n                        to={{\r\n                            pathname: \"/login\",\r\n                            state: { from: location }\r\n                        }}\r\n                    />\r\n                )\r\n            }\r\n        />\r\n    );\r\n};\r\n\r\nexport default PrivatRoute;","G:\\Programming\\Web Devoloping\\Projects\\Assignments\\Assignment 9\\urban-riders\\src\\components\\Option\\Option.js",[],{"ruleId":"60","severity":1,"message":"61","line":8,"column":3,"nodeType":"62","messageId":"63","endLine":8,"endColumn":7},{"ruleId":"60","severity":1,"message":"64","line":5,"column":10,"nodeType":"62","messageId":"63","endLine":5,"endColumn":16},{"ruleId":"60","severity":1,"message":"65","line":17,"column":12,"nodeType":"62","messageId":"63","endLine":17,"endColumn":24},{"ruleId":"60","severity":1,"message":"66","line":60,"column":25,"nodeType":"62","messageId":"63","endLine":60,"endColumn":34},{"ruleId":"60","severity":1,"message":"67","line":86,"column":17,"nodeType":"62","messageId":"63","endLine":86,"endColumn":29},{"ruleId":"60","severity":1,"message":"66","line":91,"column":21,"nodeType":"62","messageId":"63","endLine":91,"endColumn":30},{"ruleId":"60","severity":1,"message":"68","line":92,"column":21,"nodeType":"62","messageId":"63","endLine":92,"endColumn":33},{"ruleId":"60","severity":1,"message":"69","line":106,"column":21,"nodeType":"62","messageId":"63","endLine":106,"endColumn":26},{"ruleId":"60","severity":1,"message":"66","line":117,"column":21,"nodeType":"62","messageId":"63","endLine":117,"endColumn":30},{"ruleId":"60","severity":1,"message":"70","line":119,"column":21,"nodeType":"62","messageId":"63","endLine":119,"endColumn":26},{"ruleId":"60","severity":1,"message":"71","line":120,"column":21,"nodeType":"62","messageId":"63","endLine":120,"endColumn":31},{"ruleId":"60","severity":1,"message":"72","line":1,"column":17,"nodeType":"62","messageId":"63","endLine":1,"endColumn":26},{"ruleId":"60","severity":1,"message":"73","line":2,"column":8,"nodeType":"62","messageId":"63","endLine":2,"endColumn":22},{"ruleId":"60","severity":1,"message":"74","line":6,"column":26,"nodeType":"62","messageId":"63","endLine":6,"endColumn":41},"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","'loggedInUser' is assigned a value but never used.","'errorCode' is assigned a value but never used.","'loginSuccess' is assigned a value but never used.","'errorMessage' is assigned a value but never used.","'token' is assigned a value but never used.","'email' is assigned a value but never used.","'credential' is assigned a value but never used.","'useEffect' is defined but never used.","'GoogleMapReact' is defined but never used.","'setLoggedInUser' is assigned a value but never used."]